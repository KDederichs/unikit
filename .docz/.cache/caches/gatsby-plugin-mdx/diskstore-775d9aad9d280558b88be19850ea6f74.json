{"expireTime":9007200823024966000,"key":"gatsby-plugin-mdx-entire-payload-ee793597b2cb38c89ae1c3eab73e2610-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/kations/Projekte/unikit/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":109,"offset":110},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":112},"end":{"line":5,"column":29,"offset":140},"indent":[]}},{"type":"import","value":"import { Playground, Props } from 'docz'\nimport {Button, Flex, useTheme} from '../index'","position":{"start":{"line":8,"column":1,"offset":143},"end":{"line":9,"column":48,"offset":231},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Button","position":{"start":{"line":11,"column":3,"offset":235},"end":{"line":11,"column":9,"offset":241},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":233},"end":{"line":11,"column":9,"offset":241},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Usage","position":{"start":{"line":13,"column":5,"offset":247},"end":{"line":13,"column":10,"offset":252},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":243},"end":{"line":13,"column":10,"offset":252},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"import { Button, Flex } from 'unikit'","position":{"start":{"line":15,"column":1,"offset":254},"end":{"line":17,"column":4,"offset":303},"indent":[1,1]}},{"type":"jsx","value":"<Playground>\n{() => {\n    const theme = useTheme()\nconsole.log({theme})\n    return (\n      <>\n        <Button onPress={() => theme.alert({type: 'success', message: 'iam a alert'})}>Alert</Button>  \n      </>\n    )\n  }}\n    \n</Playground>","position":{"start":{"line":20,"column":1,"offset":306},"end":{"line":31,"column":14,"offset":543},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Props","position":{"start":{"line":33,"column":5,"offset":549},"end":{"line":33,"column":10,"offset":554},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":545},"end":{"line":33,"column":10,"offset":554},"indent":[]}},{"type":"jsx","value":"<Props of={Button} />","position":{"start":{"line":35,"column":1,"offset":556},"end":{"line":35,"column":22,"offset":577},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":37,"column":1,"offset":579},"end":{"line":37,"column":31,"offset":609},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":37,"column":31,"offset":609}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/kations/Projekte/unikit/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport { Playground, Props } from 'docz'\nimport {Button, Flex, useTheme} from '../index'\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h1>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`import { Button, Flex } from 'unikit'\n`}</code></pre>\n    <Playground __position={0} __code={'() => {\\n  const theme = useTheme()\\n  console.log({ theme })\\n  return (\\n    <>\\n      <Button\\n        onPress={() =>\\n          theme.alert({ type: \\'success\\', message: \\'iam a alert\\' })\\n        }\\n      >\\n        Alert\\n      </Button>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Flex,\n      useTheme\n    }} mdxType=\"Playground\">\n      {() => {\n        const theme = useTheme();\n        console.log({\n          theme\n        });\n        return <>\n        <Button onPress={() => theme.alert({\n            type: 'success',\n            message: 'iam a alert'\n          })} mdxType=\"Button\">Alert</Button>  \n      </>;\n      }}\n    \n    </Playground>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={Button} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}